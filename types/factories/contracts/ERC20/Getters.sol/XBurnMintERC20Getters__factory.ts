/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  XBurnMintERC20Getters,
  XBurnMintERC20GettersInterface,
} from "../../../../contracts/ERC20/Getters.sol/XBurnMintERC20Getters";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "addressToBytes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "b",
        type: "bytes32",
      },
    ],
    name: "bytesToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "decodeTransfer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "tokenAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "tokenChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "toAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "toChain",
            type: "uint16",
          },
        ],
        internalType: "struct XBurnMintERC20Structs.CrossChainPayload",
        name: "transfer",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "tokenAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "tokenChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "toAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "toChain",
            type: "uint16",
          },
        ],
        internalType: "struct XBurnMintERC20Structs.CrossChainPayload",
        name: "transfer",
        type: "tuple",
      },
    ],
    name: "encodeTransfer",
    outputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "evmChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finality",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "isTransferCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
    ],
    name: "tokenContracts",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506107aa806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063aa4efa5b11610076578063dc02f4561161005b578063dc02f45614610216578063ded8454a1461026e578063f7ee99981461028857600080fd5b8063aa4efa5b146101d0578063c599efdd1461020357600080fd5b806384acd1bb116100a757806384acd1bb146100f85780638d7a646b1461011d5780639a8a0592146101ba57600080fd5b806364d42b17146100c3578063739fc8d1146100da575b600080fd5b6004545b6040519081526020015b60405180910390f35b60005462010000900460ff1660405160ff90911681526020016100d1565b6001546001600160a01b03165b6040516001600160a01b0390911681526020016100d1565b6101ad61012b366004610592565b80516020808301516040808501516060868101516080880151845196870197909752928501939093527fffff00000000000000000000000000000000000000000000000000000000000060f091821b81168585015260628501929092529390931b90921660828201526084016040516020818303038152906040529050919050565b6040516100d1919061060d565b60005460405161ffff90911681526020016100d1565b6101f36101de366004610662565b60009081526002602052604090205460ff1690565b60405190151581526020016100d1565b610105610211366004610662565b6102ac565b61022961022436600461067b565b610327565b6040805182518152602080840151908201528282015161ffff90811692820192909252606080840151908201526080928301519091169181019190915260a0016100d1565b6100c761027c36600461072c565b6001600160a01b031690565b6100c761029636600461075c565b61ffff1660009081526003602052604090205490565b60007fffffffffffffffffffffffff00000000000000000000000000000000000000008216156103235760405162461bcd60e51b815260206004820152601360248201527f696e76616c69642045564d20616464726573730000000000000000000000000060448201526064015b60405180910390fd5b5090565b6040805160a08101825260008082526020820181905291810182905260608101829052608081018290529061035c838261043c565b8252610369602082610777565b905061037583826104a2565b6020808401919091526103889082610777565b905061039483826104ff565b61ffff1660408301526103a8600282610777565b90506103b483826104a2565b60608301526103c4602082610777565b90506103d083826104ff565b61ffff1660808301526103e4600282610777565b9050808351146104365760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964205472616e7366657200000000000000000000000000000000604482015260640161031a565b50919050565b6000610449826020610777565b835110156104995760405162461bcd60e51b815260206004820152601560248201527f746f55696e743235365f6f75744f66426f756e64730000000000000000000000604482015260640161031a565b50016020015190565b60006104af826020610777565b835110156104995760405162461bcd60e51b815260206004820152601560248201527f746f427974657333325f6f75744f66426f756e64730000000000000000000000604482015260640161031a565b600061050c826002610777565b8351101561055c5760405162461bcd60e51b815260206004820152601460248201527f746f55696e7431365f6f75744f66426f756e6473000000000000000000000000604482015260640161031a565b50016002015190565b634e487b7160e01b600052604160045260246000fd5b803561ffff8116811461058d57600080fd5b919050565b600060a082840312156105a457600080fd5b60405160a0810181811067ffffffffffffffff821117156105c7576105c7610565565b806040525082358152602083013560208201526105e66040840161057b565b6040820152606083013560608201526106016080840161057b565b60808201529392505050565b600060208083528351808285015260005b8181101561063a5785810183015185820160400152820161061e565b8181111561064c576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561067457600080fd5b5035919050565b60006020828403121561068d57600080fd5b813567ffffffffffffffff808211156106a557600080fd5b818401915084601f8301126106b957600080fd5b8135818111156106cb576106cb610565565b604051601f8201601f19908116603f011681019083821181831017156106f3576106f3610565565b8160405282815287602084870101111561070c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561073e57600080fd5b81356001600160a01b038116811461075557600080fd5b9392505050565b60006020828403121561076e57600080fd5b6107558261057b565b6000821982111561079857634e487b7160e01b600052601160045260246000fd5b50019056fea164736f6c634300080a000a";

type XBurnMintERC20GettersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XBurnMintERC20GettersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XBurnMintERC20Getters__factory extends ContractFactory {
  constructor(...args: XBurnMintERC20GettersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<XBurnMintERC20Getters> {
    return super.deploy(overrides || {}) as Promise<XBurnMintERC20Getters>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): XBurnMintERC20Getters {
    return super.attach(address) as XBurnMintERC20Getters;
  }
  override connect(signer: Signer): XBurnMintERC20Getters__factory {
    return super.connect(signer) as XBurnMintERC20Getters__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XBurnMintERC20GettersInterface {
    return new utils.Interface(_abi) as XBurnMintERC20GettersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XBurnMintERC20Getters {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as XBurnMintERC20Getters;
  }
}
