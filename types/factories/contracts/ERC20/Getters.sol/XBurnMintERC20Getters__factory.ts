/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  XBurnMintERC20Getters,
  XBurnMintERC20GettersInterface,
} from "../../../../contracts/ERC20/Getters.sol/XBurnMintERC20Getters";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "addressToBytes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "b",
        type: "bytes32",
      },
    ],
    name: "bytesToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "decodeTransfer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "tokenAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "tokenChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "toAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "toChain",
            type: "uint16",
          },
        ],
        internalType: "struct XBurnMintERC20Structs.CrossChainPayload",
        name: "transfer",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "tokenAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "tokenChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "toAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "toChain",
            type: "uint16",
          },
        ],
        internalType: "struct XBurnMintERC20Structs.CrossChainPayload",
        name: "transfer",
        type: "tuple",
      },
    ],
    name: "encodeTransfer",
    outputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "evmChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finality",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "isTransferCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parentChainIdEVM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
    ],
    name: "tokenContracts",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506107d9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80639a8a059211610081578063dc02f4561161005b578063dc02f45614610245578063ded8454a1461029d578063f7ee9998146102b757600080fd5b80639a8a0592146101e9578063aa4efa5b146101ff578063c599efdd1461023257600080fd5b806374d32ad4116100b257806374d32ad41461011657806384acd1bb1461013b5780638d7a646b1461014c57600080fd5b80631650515d146100d957806364d42b17146100f0578063739fc8d1146100f8575b600080fd5b6006545b6040519081526020015b60405180910390f35b6004546100dd565b60005462010000900460ff1660405160ff90911681526020016100e7565b6005546001600160a01b03165b6040516001600160a01b0390911681526020016100e7565b6001546001600160a01b0316610123565b6101dc61015a3660046105c1565b80516020808301516040808501516060868101516080880151845196870197909752928501939093527fffff00000000000000000000000000000000000000000000000000000000000060f091821b81168585015260628501929092529390931b90921660828201526084016040516020818303038152906040529050919050565b6040516100e7919061063c565b60005460405161ffff90911681526020016100e7565b61022261020d366004610691565b60009081526002602052604090205460ff1690565b60405190151581526020016100e7565b610123610240366004610691565b6102db565b6102586102533660046106aa565b610356565b6040805182518152602080840151908201528282015161ffff90811692820192909252606080840151908201526080928301519091169181019190915260a0016100e7565b6100dd6102ab36600461075b565b6001600160a01b031690565b6100dd6102c536600461078b565b61ffff1660009081526003602052604090205490565b60007fffffffffffffffffffffffff00000000000000000000000000000000000000008216156103525760405162461bcd60e51b815260206004820152601360248201527f696e76616c69642045564d20616464726573730000000000000000000000000060448201526064015b60405180910390fd5b5090565b6040805160a08101825260008082526020820181905291810182905260608101829052608081018290529061038b838261046b565b82526103986020826107a6565b90506103a483826104d1565b6020808401919091526103b790826107a6565b90506103c3838261052e565b61ffff1660408301526103d76002826107a6565b90506103e383826104d1565b60608301526103f36020826107a6565b90506103ff838261052e565b61ffff1660808301526104136002826107a6565b9050808351146104655760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964205472616e73666572000000000000000000000000000000006044820152606401610349565b50919050565b60006104788260206107a6565b835110156104c85760405162461bcd60e51b815260206004820152601560248201527f746f55696e743235365f6f75744f66426f756e647300000000000000000000006044820152606401610349565b50016020015190565b60006104de8260206107a6565b835110156104c85760405162461bcd60e51b815260206004820152601560248201527f746f427974657333325f6f75744f66426f756e647300000000000000000000006044820152606401610349565b600061053b8260026107a6565b8351101561058b5760405162461bcd60e51b815260206004820152601460248201527f746f55696e7431365f6f75744f66426f756e64730000000000000000000000006044820152606401610349565b50016002015190565b634e487b7160e01b600052604160045260246000fd5b803561ffff811681146105bc57600080fd5b919050565b600060a082840312156105d357600080fd5b60405160a0810181811067ffffffffffffffff821117156105f6576105f6610594565b80604052508235815260208301356020820152610615604084016105aa565b604082015260608301356060820152610630608084016105aa565b60808201529392505050565b600060208083528351808285015260005b818110156106695785810183015185820160400152820161064d565b8181111561067b576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156106a357600080fd5b5035919050565b6000602082840312156106bc57600080fd5b813567ffffffffffffffff808211156106d457600080fd5b818401915084601f8301126106e857600080fd5b8135818111156106fa576106fa610594565b604051601f8201601f19908116603f0116810190838211818310171561072257610722610594565b8160405282815287602084870101111561073b57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561076d57600080fd5b81356001600160a01b038116811461078457600080fd5b9392505050565b60006020828403121561079d57600080fd5b610784826105aa565b600082198211156107c757634e487b7160e01b600052601160045260246000fd5b50019056fea164736f6c634300080a000a";

type XBurnMintERC20GettersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XBurnMintERC20GettersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XBurnMintERC20Getters__factory extends ContractFactory {
  constructor(...args: XBurnMintERC20GettersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<XBurnMintERC20Getters> {
    return super.deploy(overrides || {}) as Promise<XBurnMintERC20Getters>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): XBurnMintERC20Getters {
    return super.attach(address) as XBurnMintERC20Getters;
  }
  override connect(signer: Signer): XBurnMintERC20Getters__factory {
    return super.connect(signer) as XBurnMintERC20Getters__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XBurnMintERC20GettersInterface {
    return new utils.Interface(_abi) as XBurnMintERC20GettersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XBurnMintERC20Getters {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as XBurnMintERC20Getters;
  }
}
