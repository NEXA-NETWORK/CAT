/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  XBurnMintERC20Governance,
  XBurnMintERC20GovernanceInterface,
} from "../../../../contracts/ERC20/Governance.sol/XBurnMintERC20Governance";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "addressToBytes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "b",
        type: "bytes32",
      },
    ],
    name: "bytesToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "decodeTransfer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "tokenAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "tokenChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "toAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "toChain",
            type: "uint16",
          },
        ],
        internalType: "struct XBurnMintERC20Structs.CrossChainPayload",
        name: "transfer",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "tokenAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "tokenChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "toAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "toChain",
            type: "uint16",
          },
        ],
        internalType: "struct XBurnMintERC20Structs.CrossChainPayload",
        name: "transfer",
        type: "tuple",
      },
    ],
    name: "encodeTransfer",
    outputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "evmChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finality",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "isTransferCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parentChainIdEVM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "tokenContract",
        type: "bytes32",
      },
    ],
    name: "registerChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "chainId",
        type: "uint16[]",
      },
      {
        internalType: "bytes32[]",
        name: "tokenContract",
        type: "bytes32[]",
      },
    ],
    name: "registerChains",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "registerNativeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
    ],
    name: "tokenContracts",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "finality",
        type: "uint8",
      },
    ],
    name: "updateFinality",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b610071565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610d4a806100806000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80638da5cb5b116100cd578063dc02f45611610081578063e8d73d8211610066578063e8d73d8214610388578063f2fde38b1461039b578063f7ee9998146103ae57600080fd5b8063dc02f45614610316578063ded8454a1461036e57600080fd5b8063aa4efa5b116100b2578063aa4efa5b146102bd578063c599efdd146102f0578063d95981981461030357600080fd5b80638da5cb5b146102965780639a8a0592146102a757600080fd5b8063715018a61161012457806374d32ad41161010957806374d32ad4146101c357806384acd1bb146101e85780638d7a646b146101f957600080fd5b8063715018a61461019d578063739fc8d1146101a557600080fd5b80630830ce14146101565780631650515d1461016b57806364d42b171461018257806365bb3ea71461018a575b600080fd5b61016961016436600461091b565b6103d2565b005b6006545b6040519081526020015b60405180910390f35b60045461016f565b610169610198366004610962565b610408565b610169610428565b60005462010000900460ff1660405160ff9091168152602001610179565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610179565b6001546001600160a01b03166101d0565b6102896102073660046109d3565b80516020808301516040808501516060868101516080880151845196870197909752928501939093527fffff00000000000000000000000000000000000000000000000000000000000060f091821b81168585015260628501929092529390931b90921660828201526084016040516020818303038152906040529050919050565b6040516101799190610a4e565b6007546001600160a01b03166101d0565b60005460405161ffff9091168152602001610179565b6102e06102cb366004610aa3565b60009081526002602052604090205460ff1690565b6040519015158152602001610179565b6101d06102fe366004610aa3565b61043c565b610169610311366004610abc565b6104ac565b610329610324366004610adf565b6104cd565b6040805182518152602080840151908201528282015161ffff90811692820192909252606080840151908201526080928301519091169181019190915260a001610179565b61016f61037c36600461091b565b6001600160a01b031690565b610169610396366004610c03565b6105e2565b6101696103a936600461091b565b6106ac565b61016f6103bc366004610cc3565b61ffff1660009081526003602052604090205490565b6103da610739565b6005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03831617905550565b50565b610410610739565b61ffff91909116600090815260036020526040902055565b610430610739565b61043a6000610793565b565b600073ffffffffffffffffffffffffffffffffffffffff198216156104a85760405162461bcd60e51b815260206004820152601360248201527f696e76616c69642045564d20616464726573730000000000000000000000000060448201526064015b60405180910390fd5b5090565b6104b4610739565b6000805462ff000019166201000060ff84160217905550565b6040805160a08101825260008082526020820181905291810182905260608101829052608081018290529061050283826107f2565b825261050f602082610cf4565b905061051b8382610858565b60208084019190915261052e9082610cf4565b905061053a83826108b5565b61ffff16604083015261054e600282610cf4565b905061055a8382610858565b606083015261056a602082610cf4565b905061057683826108b5565b61ffff16608083015261058a600282610cf4565b9050808351146105dc5760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964205472616e7366657200000000000000000000000000000000604482015260640161049f565b50919050565b6105ea610739565b805182511461063b5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420496e70757400000000000000000000000000000000000000604482015260640161049f565b60005b81518110156106a75761069583828151811061065c5761065c610d0c565b602002602001015183838151811061067657610676610d0c565b602002602001015161ffff909116600090815260036020526040902055565b8061069f81610d22565b91505061063e565b505050565b6106b4610739565b6001600160a01b0381166107305760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161049f565b61040581610793565b6007546001600160a01b0316331461043a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049f565b600780546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006107ff826020610cf4565b8351101561084f5760405162461bcd60e51b815260206004820152601560248201527f746f55696e743235365f6f75744f66426f756e64730000000000000000000000604482015260640161049f565b50016020015190565b6000610865826020610cf4565b8351101561084f5760405162461bcd60e51b815260206004820152601560248201527f746f427974657333325f6f75744f66426f756e64730000000000000000000000604482015260640161049f565b60006108c2826002610cf4565b835110156109125760405162461bcd60e51b815260206004820152601460248201527f746f55696e7431365f6f75744f66426f756e6473000000000000000000000000604482015260640161049f565b50016002015190565b60006020828403121561092d57600080fd5b81356001600160a01b038116811461094457600080fd5b9392505050565b803561ffff8116811461095d57600080fd5b919050565b6000806040838503121561097557600080fd5b61097e8361094b565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156109cb576109cb61098c565b604052919050565b600060a082840312156109e557600080fd5b60405160a0810181811067ffffffffffffffff82111715610a0857610a0861098c565b80604052508235815260208301356020820152610a276040840161094b565b604082015260608301356060820152610a426080840161094b565b60808201529392505050565b600060208083528351808285015260005b81811015610a7b57858101830151858201604001528201610a5f565b81811115610a8d576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215610ab557600080fd5b5035919050565b600060208284031215610ace57600080fd5b813560ff8116811461094457600080fd5b60006020808385031215610af257600080fd5b823567ffffffffffffffff80821115610b0a57600080fd5b818501915085601f830112610b1e57600080fd5b813581811115610b3057610b3061098c565b610b42601f8201601f191685016109a2565b91508082528684828501011115610b5857600080fd5b8084840185840137600090820190930192909252509392505050565b600067ffffffffffffffff821115610b8e57610b8e61098c565b5060051b60200190565b600082601f830112610ba957600080fd5b81356020610bbe610bb983610b74565b6109a2565b82815260059290921b84018101918181019086841115610bdd57600080fd5b8286015b84811015610bf85780358352918301918301610be1565b509695505050505050565b60008060408385031215610c1657600080fd5b823567ffffffffffffffff80821115610c2e57600080fd5b818501915085601f830112610c4257600080fd5b81356020610c52610bb983610b74565b82815260059290921b84018101918181019089841115610c7157600080fd5b948201945b83861015610c9657610c878661094b565b82529482019490820190610c76565b96505086013592505080821115610cac57600080fd5b50610cb985828601610b98565b9150509250929050565b600060208284031215610cd557600080fd5b6109448261094b565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d0757610d07610cde565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610d3657610d36610cde565b506001019056fea164736f6c634300080a000a";

type XBurnMintERC20GovernanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XBurnMintERC20GovernanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XBurnMintERC20Governance__factory extends ContractFactory {
  constructor(...args: XBurnMintERC20GovernanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<XBurnMintERC20Governance> {
    return super.deploy(overrides || {}) as Promise<XBurnMintERC20Governance>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): XBurnMintERC20Governance {
    return super.attach(address) as XBurnMintERC20Governance;
  }
  override connect(signer: Signer): XBurnMintERC20Governance__factory {
    return super.connect(signer) as XBurnMintERC20Governance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XBurnMintERC20GovernanceInterface {
    return new utils.Interface(_abi) as XBurnMintERC20GovernanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XBurnMintERC20Governance {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as XBurnMintERC20Governance;
  }
}
