/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  XBurnMintERC20Governance,
  XBurnMintERC20GovernanceInterface,
} from "../../../../contracts/ERC20/Governance.sol/XBurnMintERC20Governance";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "addressToBytes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "b",
        type: "bytes32",
      },
    ],
    name: "bytesToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "decodeTransfer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "tokenAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "tokenChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "toAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "toChain",
            type: "uint16",
          },
        ],
        internalType: "struct XBurnMintERC20Structs.CrossChainPayload",
        name: "transfer",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "tokenAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "tokenChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "toAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "toChain",
            type: "uint16",
          },
        ],
        internalType: "struct XBurnMintERC20Structs.CrossChainPayload",
        name: "transfer",
        type: "tuple",
      },
    ],
    name: "encodeTransfer",
    outputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "evmChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finality",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "isTransferCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parentChainIdEVM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "tokenContract",
        type: "bytes32",
      },
    ],
    name: "registerChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "chainId",
        type: "uint16[]",
      },
      {
        internalType: "bytes32[]",
        name: "tokenContract",
        type: "bytes32[]",
      },
    ],
    name: "registerChains",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
    ],
    name: "tokenContracts",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "finality",
        type: "uint8",
      },
    ],
    name: "updateFinality",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b610071565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610ce9806100806000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80639a8a0592116100b2578063dc02f45611610081578063e8d73d8211610066578063e8d73d821461035a578063f2fde38b1461036d578063f7ee99981461038057600080fd5b8063dc02f456146102e8578063ded8454a1461034057600080fd5b80639a8a059214610279578063aa4efa5b1461028f578063c599efdd146102c2578063d9598198146102d557600080fd5b8063739fc8d11161010957806384acd1bb116100ee57806384acd1bb146101ba5780638d7a646b146101cb5780638da5cb5b1461026857600080fd5b8063739fc8d11461017757806374d32ad41461019557600080fd5b80631650515d1461013b57806364d42b171461015257806365bb3ea71461015a578063715018a61461016f575b600080fd5b6006545b6040519081526020015b60405180910390f35b60045461013f565b61016d6101683660046108d1565b6103a4565b005b61016d6103c4565b60005462010000900460ff1660405160ff9091168152602001610149565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610149565b6001546001600160a01b03166101a2565b61025b6101d9366004610942565b80516020808301516040808501516060868101516080880151845196870197909752928501939093527fffff00000000000000000000000000000000000000000000000000000000000060f091821b81168585015260628501929092529390931b90921660828201526084016040516020818303038152906040529050919050565b60405161014991906109bd565b6007546001600160a01b03166101a2565b60005460405161ffff9091168152602001610149565b6102b261029d366004610a12565b60009081526002602052604090205460ff1690565b6040519015158152602001610149565b6101a26102d0366004610a12565b6103d8565b61016d6102e3366004610a2b565b610448565b6102fb6102f6366004610a55565b61046c565b6040805182518152602080840151908201528282015161ffff90811692820192909252606080840151908201526080928301519091169181019190915260a001610149565b61013f61034e366004610aea565b6001600160a01b031690565b61016d610368366004610ba2565b610581565b61016d61037b366004610aea565b61064b565b61013f61038e366004610c62565b61ffff1660009081526003602052604090205490565b6103ac6106d8565b61ffff91909116600090815260036020526040902055565b6103cc6106d8565b6103d66000610732565b565b600073ffffffffffffffffffffffffffffffffffffffff198216156104445760405162461bcd60e51b815260206004820152601360248201527f696e76616c69642045564d20616464726573730000000000000000000000000060448201526064015b60405180910390fd5b5090565b6104506106d8565b6000805462ff000019166201000060ff84160217905550565b50565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052906104a18382610791565b82526104ae602082610c93565b90506104ba83826107f7565b6020808401919091526104cd9082610c93565b90506104d98382610854565b61ffff1660408301526104ed600282610c93565b90506104f983826107f7565b6060830152610509602082610c93565b90506105158382610854565b61ffff166080830152610529600282610c93565b90508083511461057b5760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964205472616e7366657200000000000000000000000000000000604482015260640161043b565b50919050565b6105896106d8565b80518251146105da5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420496e70757400000000000000000000000000000000000000604482015260640161043b565b60005b8151811015610646576106348382815181106105fb576105fb610cab565b602002602001015183838151811061061557610615610cab565b602002602001015161ffff909116600090815260036020526040902055565b8061063e81610cc1565b9150506105dd565b505050565b6106536106d8565b6001600160a01b0381166106cf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161043b565b61046981610732565b6007546001600160a01b031633146103d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161043b565b600780546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061079e826020610c93565b835110156107ee5760405162461bcd60e51b815260206004820152601560248201527f746f55696e743235365f6f75744f66426f756e64730000000000000000000000604482015260640161043b565b50016020015190565b6000610804826020610c93565b835110156107ee5760405162461bcd60e51b815260206004820152601560248201527f746f427974657333325f6f75744f66426f756e64730000000000000000000000604482015260640161043b565b6000610861826002610c93565b835110156108b15760405162461bcd60e51b815260206004820152601460248201527f746f55696e7431365f6f75744f66426f756e6473000000000000000000000000604482015260640161043b565b50016002015190565b803561ffff811681146108cc57600080fd5b919050565b600080604083850312156108e457600080fd5b6108ed836108ba565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561093a5761093a6108fb565b604052919050565b600060a0828403121561095457600080fd5b60405160a0810181811067ffffffffffffffff82111715610977576109776108fb565b80604052508235815260208301356020820152610996604084016108ba565b6040820152606083013560608201526109b1608084016108ba565b60808201529392505050565b600060208083528351808285015260005b818110156109ea578581018301518582016040015282016109ce565b818111156109fc576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215610a2457600080fd5b5035919050565b600060208284031215610a3d57600080fd5b813560ff81168114610a4e57600080fd5b9392505050565b60006020808385031215610a6857600080fd5b823567ffffffffffffffff80821115610a8057600080fd5b818501915085601f830112610a9457600080fd5b813581811115610aa657610aa66108fb565b610ab8601f8201601f19168501610911565b91508082528684828501011115610ace57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208284031215610afc57600080fd5b81356001600160a01b0381168114610a4e57600080fd5b600067ffffffffffffffff821115610b2d57610b2d6108fb565b5060051b60200190565b600082601f830112610b4857600080fd5b81356020610b5d610b5883610b13565b610911565b82815260059290921b84018101918181019086841115610b7c57600080fd5b8286015b84811015610b975780358352918301918301610b80565b509695505050505050565b60008060408385031215610bb557600080fd5b823567ffffffffffffffff80821115610bcd57600080fd5b818501915085601f830112610be157600080fd5b81356020610bf1610b5883610b13565b82815260059290921b84018101918181019089841115610c1057600080fd5b948201945b83861015610c3557610c26866108ba565b82529482019490820190610c15565b96505086013592505080821115610c4b57600080fd5b50610c5885828601610b37565b9150509250929050565b600060208284031215610c7457600080fd5b610a4e826108ba565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ca657610ca6610c7d565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610cd557610cd5610c7d565b506001019056fea164736f6c634300080a000a";

type XBurnMintERC20GovernanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XBurnMintERC20GovernanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XBurnMintERC20Governance__factory extends ContractFactory {
  constructor(...args: XBurnMintERC20GovernanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<XBurnMintERC20Governance> {
    return super.deploy(overrides || {}) as Promise<XBurnMintERC20Governance>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): XBurnMintERC20Governance {
    return super.attach(address) as XBurnMintERC20Governance;
  }
  override connect(signer: Signer): XBurnMintERC20Governance__factory {
    return super.connect(signer) as XBurnMintERC20Governance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XBurnMintERC20GovernanceInterface {
    return new utils.Interface(_abi) as XBurnMintERC20GovernanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XBurnMintERC20Governance {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as XBurnMintERC20Governance;
  }
}
