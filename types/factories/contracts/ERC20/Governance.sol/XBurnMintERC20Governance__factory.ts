/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  XBurnMintERC20Governance,
  XBurnMintERC20GovernanceInterface,
} from "../../../../contracts/ERC20/Governance.sol/XBurnMintERC20Governance";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "addressToBytes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "b",
        type: "bytes32",
      },
    ],
    name: "bytesToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "decodeTransfer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "tokenAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "tokenChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "toAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "toChain",
            type: "uint16",
          },
        ],
        internalType: "struct XBurnMintERC20Structs.CrossChainPayload",
        name: "transfer",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "tokenAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "tokenChain",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "toAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "toChain",
            type: "uint16",
          },
        ],
        internalType: "struct XBurnMintERC20Structs.CrossChainPayload",
        name: "transfer",
        type: "tuple",
      },
    ],
    name: "encodeTransfer",
    outputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "evmChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finality",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "isTransferCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "tokenContract",
        type: "bytes32",
      },
    ],
    name: "registerChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "chainId",
        type: "uint16[]",
      },
      {
        internalType: "bytes32[]",
        name: "tokenContract",
        type: "bytes32[]",
      },
    ],
    name: "registerChains",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
    ],
    name: "tokenContracts",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "finality",
        type: "uint8",
      },
    ],
    name: "updateFinality",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b610071565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610c9a806100806000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063aa4efa5b11610097578063ded8454a11610066578063ded8454a146102f1578063e8d73d821461030b578063f2fde38b1461031e578063f7ee99981461033157600080fd5b8063aa4efa5b14610240578063c599efdd14610273578063d959819814610286578063dc02f4561461029957600080fd5b806384acd1bb116100d357806384acd1bb146101575780638d7a646b1461017c5780638da5cb5b146102195780639a8a05921461022a57600080fd5b806364d42b171461010557806365bb3ea71461011c578063715018a614610131578063739fc8d114610139575b600080fd5b6004545b6040519081526020015b60405180910390f35b61012f61012a366004610882565b610355565b005b61012f610375565b60005462010000900460ff1660405160ff9091168152602001610113565b6001546001600160a01b03165b6040516001600160a01b039091168152602001610113565b61020c61018a3660046108f3565b80516020808301516040808501516060868101516080880151845196870197909752928501939093527fffff00000000000000000000000000000000000000000000000000000000000060f091821b81168585015260628501929092529390931b90921660828201526084016040516020818303038152906040529050919050565b604051610113919061096e565b6005546001600160a01b0316610164565b60005460405161ffff9091168152602001610113565b61026361024e3660046109c3565b60009081526002602052604090205460ff1690565b6040519015158152602001610113565b6101646102813660046109c3565b610389565b61012f6102943660046109dc565b6103f9565b6102ac6102a7366004610a06565b61041d565b6040805182518152602080840151908201528282015161ffff90811692820192909252606080840151908201526080928301519091169181019190915260a001610113565b6101096102ff366004610a9b565b6001600160a01b031690565b61012f610319366004610b53565b610532565b61012f61032c366004610a9b565b6105fc565b61010961033f366004610c13565b61ffff1660009081526003602052604090205490565b61035d610689565b61ffff91909116600090815260036020526040902055565b61037d610689565b61038760006106e3565b565b600073ffffffffffffffffffffffffffffffffffffffff198216156103f55760405162461bcd60e51b815260206004820152601360248201527f696e76616c69642045564d20616464726573730000000000000000000000000060448201526064015b60405180910390fd5b5090565b610401610689565b6000805462ff000019166201000060ff84160217905550565b50565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052906104528382610742565b825261045f602082610c44565b905061046b83826107a8565b60208084019190915261047e9082610c44565b905061048a8382610805565b61ffff16604083015261049e600282610c44565b90506104aa83826107a8565b60608301526104ba602082610c44565b90506104c68382610805565b61ffff1660808301526104da600282610c44565b90508083511461052c5760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964205472616e736665720000000000000000000000000000000060448201526064016103ec565b50919050565b61053a610689565b805182511461058b5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420496e7075740000000000000000000000000000000000000060448201526064016103ec565b60005b81518110156105f7576105e58382815181106105ac576105ac610c5c565b60200260200101518383815181106105c6576105c6610c5c565b602002602001015161ffff909116600090815260036020526040902055565b806105ef81610c72565b91505061058e565b505050565b610604610689565b6001600160a01b0381166106805760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103ec565b61041a816106e3565b6005546001600160a01b031633146103875760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ec565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061074f826020610c44565b8351101561079f5760405162461bcd60e51b815260206004820152601560248201527f746f55696e743235365f6f75744f66426f756e6473000000000000000000000060448201526064016103ec565b50016020015190565b60006107b5826020610c44565b8351101561079f5760405162461bcd60e51b815260206004820152601560248201527f746f427974657333325f6f75744f66426f756e6473000000000000000000000060448201526064016103ec565b6000610812826002610c44565b835110156108625760405162461bcd60e51b815260206004820152601460248201527f746f55696e7431365f6f75744f66426f756e647300000000000000000000000060448201526064016103ec565b50016002015190565b803561ffff8116811461087d57600080fd5b919050565b6000806040838503121561089557600080fd5b61089e8361086b565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156108eb576108eb6108ac565b604052919050565b600060a0828403121561090557600080fd5b60405160a0810181811067ffffffffffffffff82111715610928576109286108ac565b806040525082358152602083013560208201526109476040840161086b565b6040820152606083013560608201526109626080840161086b565b60808201529392505050565b600060208083528351808285015260005b8181101561099b5785810183015185820160400152820161097f565b818111156109ad576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156109d557600080fd5b5035919050565b6000602082840312156109ee57600080fd5b813560ff811681146109ff57600080fd5b9392505050565b60006020808385031215610a1957600080fd5b823567ffffffffffffffff80821115610a3157600080fd5b818501915085601f830112610a4557600080fd5b813581811115610a5757610a576108ac565b610a69601f8201601f191685016108c2565b91508082528684828501011115610a7f57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208284031215610aad57600080fd5b81356001600160a01b03811681146109ff57600080fd5b600067ffffffffffffffff821115610ade57610ade6108ac565b5060051b60200190565b600082601f830112610af957600080fd5b81356020610b0e610b0983610ac4565b6108c2565b82815260059290921b84018101918181019086841115610b2d57600080fd5b8286015b84811015610b485780358352918301918301610b31565b509695505050505050565b60008060408385031215610b6657600080fd5b823567ffffffffffffffff80821115610b7e57600080fd5b818501915085601f830112610b9257600080fd5b81356020610ba2610b0983610ac4565b82815260059290921b84018101918181019089841115610bc157600080fd5b948201945b83861015610be657610bd78661086b565b82529482019490820190610bc6565b96505086013592505080821115610bfc57600080fd5b50610c0985828601610ae8565b9150509250929050565b600060208284031215610c2557600080fd5b6109ff8261086b565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c5757610c57610c2e565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610c8657610c86610c2e565b506001019056fea164736f6c634300080a000a";

type XBurnMintERC20GovernanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XBurnMintERC20GovernanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XBurnMintERC20Governance__factory extends ContractFactory {
  constructor(...args: XBurnMintERC20GovernanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<XBurnMintERC20Governance> {
    return super.deploy(overrides || {}) as Promise<XBurnMintERC20Governance>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): XBurnMintERC20Governance {
    return super.attach(address) as XBurnMintERC20Governance;
  }
  override connect(signer: Signer): XBurnMintERC20Governance__factory {
    return super.connect(signer) as XBurnMintERC20Governance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XBurnMintERC20GovernanceInterface {
    return new utils.Interface(_abi) as XBurnMintERC20GovernanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XBurnMintERC20Governance {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as XBurnMintERC20Governance;
  }
}
