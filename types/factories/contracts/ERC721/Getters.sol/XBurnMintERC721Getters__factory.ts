/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  XBurnMintERC721Getters,
  XBurnMintERC721GettersInterface,
} from "../../../../contracts/ERC721/Getters.sol/XBurnMintERC721Getters";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "addressToBytes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "baseUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "b",
        type: "bytes32",
      },
    ],
    name: "bytesToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "decodeTransfer",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "tokenAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "tokenChain",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "tokenID",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "toAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "toChain",
            type: "uint16",
          },
        ],
        internalType: "struct XBurnMintERC721Structs.CrossChainPayload",
        name: "transfer",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "tokenAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "tokenChain",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "tokenID",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "toAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "toChain",
            type: "uint16",
          },
        ],
        internalType: "struct XBurnMintERC721Structs.CrossChainPayload",
        name: "transfer",
        type: "tuple",
      },
    ],
    name: "encodeTransfer",
    outputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "evmChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finality",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "isTransferCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parentChainIdEVM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
    ],
    name: "tokenContracts",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b0c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80639abc83201161008c578063d400e15711610066578063d400e157146101db578063dc02f456146101ee578063ded8454a1461020e578063f7ee99981461022857600080fd5b80639abc832014610180578063aa4efa5b14610195578063c599efdd146101c857600080fd5b8063739fc8d1116100c8578063739fc8d11461011657806374d32ad41461013457806384acd1bb146101595780639a8a05921461016a57600080fd5b80631650515d146100ef57806361bc221a1461010657806364d42b171461010e575b600080fd5b6006545b6040519081526020015b60405180910390f35b6008546100f3565b6004546100f3565b60005462010000900460ff1660405160ff90911681526020016100fd565b6005546001600160a01b03165b6040516001600160a01b0390911681526020016100fd565b6001546001600160a01b0316610141565b60005460405161ffff90911681526020016100fd565b61018861024c565b6040516100fd9190610757565b6101b86101a3366004610771565b60009081526002602052604090205460ff1690565b60405190151581526020016100fd565b6101416101d6366004610771565b6102e1565b6101886101e9366004610876565b61035c565b6102016101fc366004610923565b6103a8565b6040516100fd9190610974565b6100f361021c3660046109d9565b6001600160a01b031690565b6100f3610236366004610a02565b61ffff1660009081526003602052604090205490565b60606000600701805461025e90610a1d565b80601f016020809104026020016040519081016040528092919081815260200182805461028a90610a1d565b80156102d75780601f106102ac576101008083540402835291602001916102d7565b820191906000526020600020905b8154815290600101906020018083116102ba57829003601f168201915b5050505050905090565b60007fffffffffffffffffffffffff00000000000000000000000000000000000000008216156103585760405162461bcd60e51b815260206004820152601360248201527f696e76616c69642045564d20616464726573730000000000000000000000000060448201526064015b60405180910390fd5b5090565b80516020808301516040808501516060868101518051608089015160a08a01519551939861039298909796929491929101610a58565b6040516020818303038152906040529050919050565b6040805160c0810182526000808252602082018190529181018290526060808201526080810182905260a08101829052906103e383826104aa565b82526103f0602082610ad0565b90506103fc8382610510565b61ffff166020830152610410600282610ad0565b905061041c8382610576565b604083015261042c602082610ad0565b9050610439600182610ad0565b905061046081602283865161044e9190610ae8565b6104589190610ae8565b8591906105d3565b6060830152508151610473600282610ae8565b905061047f8382610510565b61ffff1660a0830152610493602082610ae8565b905061049f83826104aa565b608083015250919050565b60006104b7826020610ad0565b835110156105075760405162461bcd60e51b815260206004820152601560248201527f746f427974657333325f6f75744f66426f756e64730000000000000000000000604482015260640161034f565b50016020015190565b600061051d826002610ad0565b8351101561056d5760405162461bcd60e51b815260206004820152601460248201527f746f55696e7431365f6f75744f66426f756e6473000000000000000000000000604482015260640161034f565b50016002015190565b6000610583826020610ad0565b835110156105075760405162461bcd60e51b815260206004820152601560248201527f746f55696e743235365f6f75744f66426f756e64730000000000000000000000604482015260640161034f565b6060816105e181601f610ad0565b101561062f5760405162461bcd60e51b815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015260640161034f565b6106398284610ad0565b845110156106895760405162461bcd60e51b815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015260640161034f565b6060821580156106a857604051915060008252602082016040526106f2565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156106e15780518352602092830192016106c9565b5050858452601f01601f1916604052505b50949350505050565b60005b838110156107165781810151838201526020016106fe565b83811115610725576000848401525b50505050565b600081518084526107438160208601602086016106fb565b601f01601f19169290920160200192915050565b60208152600061076a602083018461072b565b9392505050565b60006020828403121561078357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156107c3576107c361078a565b60405290565b803561ffff811681146107db57600080fd5b919050565b600067ffffffffffffffff808411156107fb576107fb61078a565b604051601f8501601f19908116603f011681019082821181831017156108235761082361078a565b8160405280935085815286868601111561083c57600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261086757600080fd5b61076a838335602085016107e0565b60006020828403121561088857600080fd5b813567ffffffffffffffff808211156108a057600080fd5b9083019060c082860312156108b457600080fd5b6108bc6107a0565b823581526108cc602084016107c9565b6020820152604083013560408201526060830135828111156108ed57600080fd5b6108f987828601610856565b6060830152506080830135608082015261091560a084016107c9565b60a082015295945050505050565b60006020828403121561093557600080fd5b813567ffffffffffffffff81111561094c57600080fd5b8201601f8101841361095d57600080fd5b61096c848235602084016107e0565b949350505050565b60208152815160208201526000602083015161ffff8082166040850152604085015160608501526060850151915060c060808501526109b660e085018361072b565b9150608085015160a08501528060a08601511660c0850152508091505092915050565b6000602082840312156109eb57600080fd5b81356001600160a01b038116811461076a57600080fd5b600060208284031215610a1457600080fd5b61076a826107c9565b600181811c90821680610a3157607f821691505b60208210811415610a5257634e487b7160e01b600052602260045260246000fd5b50919050565b878152600061ffff60f01b808960f01b16602084015287602284015260ff60f81b8760f81b1660428401528551610a96816043860160208a016106fb565b90920160438101949094525060f09190911b16606382015260650195945050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ae357610ae3610aba565b500190565b600082821015610afa57610afa610aba565b50039056fea164736f6c634300080a000a";

type XBurnMintERC721GettersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XBurnMintERC721GettersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XBurnMintERC721Getters__factory extends ContractFactory {
  constructor(...args: XBurnMintERC721GettersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<XBurnMintERC721Getters> {
    return super.deploy(overrides || {}) as Promise<XBurnMintERC721Getters>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): XBurnMintERC721Getters {
    return super.attach(address) as XBurnMintERC721Getters;
  }
  override connect(signer: Signer): XBurnMintERC721Getters__factory {
    return super.connect(signer) as XBurnMintERC721Getters__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XBurnMintERC721GettersInterface {
    return new utils.Interface(_abi) as XBurnMintERC721GettersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XBurnMintERC721Getters {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as XBurnMintERC721Getters;
  }
}
