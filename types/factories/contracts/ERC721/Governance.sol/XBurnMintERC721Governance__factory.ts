/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  XBurnMintERC721Governance,
  XBurnMintERC721GovernanceInterface,
} from "../../../../contracts/ERC721/Governance.sol/XBurnMintERC721Governance";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "addressToBytes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "baseUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "b",
        type: "bytes32",
      },
    ],
    name: "bytesToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "decodeTransfer",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "tokenAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "tokenChain",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "tokenID",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "toAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "toChain",
            type: "uint16",
          },
        ],
        internalType: "struct XBurnMintERC721Structs.CrossChainPayload",
        name: "transfer",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "tokenAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "tokenChain",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "tokenID",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "toAddress",
            type: "bytes32",
          },
          {
            internalType: "uint16",
            name: "toChain",
            type: "uint16",
          },
        ],
        internalType: "struct XBurnMintERC721Structs.CrossChainPayload",
        name: "transfer",
        type: "tuple",
      },
    ],
    name: "encodeTransfer",
    outputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "evmChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finality",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "isTransferCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parentChainIdEVM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "tokenContract",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "custodian",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "validTill",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct XBurnMintERC721Structs.SignatureVerification",
        name: "signatureArguments",
        type: "tuple",
      },
    ],
    name: "registerChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "chainId",
        type: "uint16[]",
      },
      {
        internalType: "bytes32[]",
        name: "tokenContract",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "custodian",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "validTill",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct XBurnMintERC721Structs.SignatureVerification",
        name: "signatureArguments",
        type: "tuple",
      },
    ],
    name: "registerChains",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId_",
        type: "uint16",
      },
    ],
    name: "tokenContracts",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "custodian",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "validTill",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct XBurnMintERC721Structs.SignatureVerification",
        name: "signatureArguments",
        type: "tuple",
      },
    ],
    name: "updateBaseUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "finality",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "address",
            name: "custodian",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "validTill",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct XBurnMintERC721Structs.SignatureVerification",
        name: "signatureArguments",
        type: "tuple",
      },
    ],
    name: "updateFinality",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b610071565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611a00806100806000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c80638da5cb5b116100cd578063d400e15711610081578063ded8454a11610066578063ded8454a146102e6578063f2fde38b14610300578063f7ee99981461031357600080fd5b8063d400e157146102b3578063dc02f456146102c657600080fd5b80639abc8320116100b25780639abc832014610258578063aa4efa5b1461026d578063c599efdd146102a057600080fd5b80638da5cb5b146102315780639a8a05921461024257600080fd5b806364d42b1711610124578063739fc8d111610109578063739fc8d1146101db5780637d557a3f146101f957806384acd1bb1461020c57600080fd5b806364d42b17146101cb578063715018a6146101d357600080fd5b80632c5485f4116101555780632c5485f41461019d5780634fab229a146101b057806361bc221a146101c357600080fd5b80631650515d146101715780632af6d4a814610188575b600080fd5b6005545b6040519081526020015b60405180910390f35b61019b610196366004611455565b610337565b005b61019b6101ab3660046114bd565b610556565b61019b6101be366004611514565b610704565b600754610175565b600454610175565b61019b61088e565b60005462010000900460ff1660405160ff909116815260200161017f565b61019b6102073660046115fd565b6108a2565b6001546001600160a01b03165b6040516001600160a01b03909116815260200161017f565b6008546001600160a01b0316610219565b60005460405161ffff909116815260200161017f565b610260610b63565b60405161017f919061172f565b61029061027b366004611742565b60009081526002602052604090205460ff1690565b604051901515815260200161017f565b6102196102ae366004611742565b610bf8565b6102606102c136600461175b565b610c63565b6102d96102d4366004611808565b610caf565b60405161017f9190611845565b6101756102f43660046118aa565b6001600160a01b031690565b61019b61030e3660046118aa565b610db1565b6101756103213660046118c5565b61ffff1660009081526003602052604090205490565b8061034a6008546001600160a01b031690565b6001600160a01b0316336001600160a01b03161415610383576000805462ff000019166201000060ff861602179055505050565b505050565b6000610420826000015183602001516040516020016103c092919060609290921b6bffffffffffffffffffffffff19168252601482015260340190565b60408051601f1981840301815282825280516020918201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000084830152603c8085019190915282518085039091018152605c909301909152815191012090565b82519091506001600160a01b031633146104815760405162461bcd60e51b815260206004820152601760248201527f637573746f6469616e2063616e2063616c6c206f6e6c7900000000000000000060448201526064015b60405180910390fd5b428260200151116104d45760405162461bcd60e51b815260206004820152601a60248201527f7369676e6564207472616e73616374696f6e20657870697265640000000000006044820152606401610478565b6104f48183604001516104ef6008546001600160a01b031690565b610e41565b6105395760405162461bcd60e51b8152602060048201526016602482015275756e617574686f72697a6564207369676e617475726560501b6044820152606401610478565b6000805462ff000019166201000060ff8716021790555b50505050565b806105696008546001600160a01b031690565b6001600160a01b0316336001600160a01b0316141561059d5761ffff84166000908152600360205260409020839055610550565b60006105da826000015183602001516040516020016103c092919060609290921b6bffffffffffffffffffffffff19168252601482015260340190565b82519091506001600160a01b031633146106365760405162461bcd60e51b815260206004820152601760248201527f637573746f6469616e2063616e2063616c6c206f6e6c790000000000000000006044820152606401610478565b428260200151116106895760405162461bcd60e51b815260206004820152601a60248201527f7369676e6564207472616e73616374696f6e20657870697265640000000000006044820152606401610478565b6106a48183604001516104ef6008546001600160a01b031690565b6106e95760405162461bcd60e51b8152602060048201526016602482015275756e617574686f72697a6564207369676e617475726560501b6044820152606401610478565b50505061ffff91909116600090815260036020526040902055565b806107176008546001600160a01b031690565b6001600160a01b0316336001600160a01b031614156107395761037e83610ef9565b6000610776826000015183602001516040516020016103c092919060609290921b6bffffffffffffffffffffffff19168252601482015260340190565b82519091506001600160a01b031633146107d25760405162461bcd60e51b815260206004820152601760248201527f637573746f6469616e2063616e2063616c6c206f6e6c790000000000000000006044820152606401610478565b428260200151116108255760405162461bcd60e51b815260206004820152601a60248201527f7369676e6564207472616e73616374696f6e20657870697265640000000000006044820152606401610478565b6108408183604001516104ef6008546001600160a01b031690565b6108855760405162461bcd60e51b8152602060048201526016602482015275756e617574686f72697a6564207369676e617475726560501b6044820152606401610478565b61055084610ef9565b610896610f10565b6108a06000610f6a565b565b806108b56008546001600160a01b031690565b6001600160a01b0316336001600160a01b0316141561098157825184511461090f5760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a5908125b9c1d5d609a1b6044820152606401610478565b60005b835181101561097b57610969858281518110610930576109306118e0565b602002602001015185838151811061094a5761094a6118e0565b602002602001015161ffff909116600090815260036020526040902055565b806109738161190c565b915050610912565b50610550565b60006109be826000015183602001516040516020016103c092919060609290921b6bffffffffffffffffffffffff19168252601482015260340190565b82519091506001600160a01b03163314610a1a5760405162461bcd60e51b815260206004820152601760248201527f637573746f6469616e2063616e2063616c6c206f6e6c790000000000000000006044820152606401610478565b42826020015111610a6d5760405162461bcd60e51b815260206004820152601a60248201527f7369676e6564207472616e73616374696f6e20657870697265640000000000006044820152606401610478565b610a888183604001516104ef6008546001600160a01b031690565b610acd5760405162461bcd60e51b8152602060048201526016602482015275756e617574686f72697a6564207369676e617475726560501b6044820152606401610478565b8351855114610b0e5760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a5908125b9c1d5d609a1b6044820152606401610478565b60005b8451811015610b5b57610b49868281518110610b2f57610b2f6118e0565b602002602001015186838151811061094a5761094a6118e0565b80610b538161190c565b915050610b11565b505050505050565b606060006006018054610b7590611927565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba190611927565b8015610bee5780601f10610bc357610100808354040283529160200191610bee565b820191906000526020600020905b815481529060010190602001808311610bd157829003601f168201915b5050505050905090565b600073ffffffffffffffffffffffffffffffffffffffff19821615610c5f5760405162461bcd60e51b815260206004820152601360248201527f696e76616c69642045564d2061646472657373000000000000000000000000006044820152606401610478565b5090565b80516020808301516040808501516060868101518051608089015160a08a015195519398610c9998909796929491929101611962565b6040516020818303038152906040529050919050565b6040805160c0810182526000808252602082018190529181018290526060808201526080810182905260a0810182905290610cea8382610fc9565b8252610cf76020826119c4565b9050610d03838261102f565b61ffff166020830152610d176002826119c4565b9050610d238382611095565b6040830152610d336020826119c4565b9050610d406001826119c4565b9050610d67816022838651610d5591906119dc565b610d5f91906119dc565b8591906110f2565b6060830152508151610d7a6002826119dc565b9050610d86838261102f565b61ffff1660a0830152610d9a6020826119dc565b9050610da68382610fc9565b608083015250919050565b610db9610f10565b6001600160a01b038116610e355760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610478565b610e3e81610f6a565b50565b600080600080610e508661121a565b925092509250600060018885858560405160008152602001604052604051610e94949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610eb6573d6000803e3d6000fd5b505050602060405103519050856001600160a01b0316816001600160a01b03161415610ee9576001945050505050610ef2565b60009450505050505b9392505050565b8051610f0c906006906020840190611249565b5050565b6008546001600160a01b031633146108a05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610478565b600880546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610fd68260206119c4565b835110156110265760405162461bcd60e51b815260206004820152601560248201527f746f427974657333325f6f75744f66426f756e647300000000000000000000006044820152606401610478565b50016020015190565b600061103c8260026119c4565b8351101561108c5760405162461bcd60e51b815260206004820152601460248201527f746f55696e7431365f6f75744f66426f756e64730000000000000000000000006044820152606401610478565b50016002015190565b60006110a28260206119c4565b835110156110265760405162461bcd60e51b815260206004820152601560248201527f746f55696e743235365f6f75744f66426f756e647300000000000000000000006044820152606401610478565b60608161110081601f6119c4565b101561114e5760405162461bcd60e51b815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401610478565b61115882846119c4565b845110156111a85760405162461bcd60e51b815260206004820152601160248201527f736c6963655f6f75744f66426f756e64730000000000000000000000000000006044820152606401610478565b6060821580156111c75760405191506000825260208201604052611211565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156112005780518352602092830192016111e8565b5050858452601f01601f1916604052505b50949350505050565b6000806000835160411461122d57600080fd5b5050506020810151604082015160609092015160001a92909190565b82805461125590611927565b90600052602060002090601f01602090048101928261127757600085556112bd565b82601f1061129057805160ff19168380011785556112bd565b828001600101855582156112bd579182015b828111156112bd5782518255916020019190600101906112a2565b50610c5f9291505b80821115610c5f57600081556001016112c5565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611312576113126112d9565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611341576113416112d9565b604052919050565b80356001600160a01b038116811461136057600080fd5b919050565b600082601f83011261137657600080fd5b813567ffffffffffffffff811115611390576113906112d9565b6113a3601f8201601f1916602001611318565b8181528460208386010111156113b857600080fd5b816020850160208301376000918101602001919091529392505050565b6000606082840312156113e757600080fd5b6040516060810167ffffffffffffffff828210818311171561140b5761140b6112d9565b8160405282935061141b85611349565b835260208501356020840152604085013591508082111561143b57600080fd5b5061144885828601611365565b6040830152505092915050565b6000806040838503121561146857600080fd5b823560ff8116811461147957600080fd5b9150602083013567ffffffffffffffff81111561149557600080fd5b6114a1858286016113d5565b9150509250929050565b803561ffff8116811461136057600080fd5b6000806000606084860312156114d257600080fd5b6114db846114ab565b925060208401359150604084013567ffffffffffffffff8111156114fe57600080fd5b61150a868287016113d5565b9150509250925092565b6000806040838503121561152757600080fd5b823567ffffffffffffffff8082111561153f57600080fd5b61154b86838701611365565b9350602085013591508082111561156157600080fd5b506114a1858286016113d5565b600067ffffffffffffffff821115611588576115886112d9565b5060051b60200190565b600082601f8301126115a357600080fd5b813560206115b86115b38361156e565b611318565b82815260059290921b840181019181810190868411156115d757600080fd5b8286015b848110156115f257803583529183019183016115db565b509695505050505050565b60008060006060848603121561161257600080fd5b833567ffffffffffffffff8082111561162a57600080fd5b818601915086601f83011261163e57600080fd5b8135602061164e6115b38361156e565b82815260059290921b8401810191818101908a84111561166d57600080fd5b948201945b8386101561169257611683866114ab565b82529482019490820190611672565b975050870135925050808211156116a857600080fd5b6116b487838801611592565b935060408601359150808211156116ca57600080fd5b5061150a868287016113d5565b60005b838110156116f25781810151838201526020016116da565b838111156105505750506000910152565b6000815180845261171b8160208601602086016116d7565b601f01601f19169290920160200192915050565b602081526000610ef26020830184611703565b60006020828403121561175457600080fd5b5035919050565b60006020828403121561176d57600080fd5b813567ffffffffffffffff8082111561178557600080fd5b9083019060c0828603121561179957600080fd5b6117a16112ef565b823581526117b1602084016114ab565b6020820152604083013560408201526060830135828111156117d257600080fd5b6117de87828601611365565b606083015250608083013560808201526117fa60a084016114ab565b60a082015295945050505050565b60006020828403121561181a57600080fd5b813567ffffffffffffffff81111561183157600080fd5b61183d84828501611365565b949350505050565b60208152815160208201526000602083015161ffff8082166040850152604085015160608501526060850151915060c0608085015261188760e0850183611703565b9150608085015160a08501528060a08601511660c0850152508091505092915050565b6000602082840312156118bc57600080fd5b610ef282611349565b6000602082840312156118d757600080fd5b610ef2826114ab565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611920576119206118f6565b5060010190565b600181811c9082168061193b57607f821691505b6020821081141561195c57634e487b7160e01b600052602260045260246000fd5b50919050565b878152600061ffff60f01b808960f01b16602084015287602284015260ff60f81b8760f81b16604284015285516119a0816043860160208a016116d7565b90920160438101949094525060f09190911b16606382015260650195945050505050565b600082198211156119d7576119d76118f6565b500190565b6000828210156119ee576119ee6118f6565b50039056fea164736f6c634300080a000a";

type XBurnMintERC721GovernanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XBurnMintERC721GovernanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XBurnMintERC721Governance__factory extends ContractFactory {
  constructor(...args: XBurnMintERC721GovernanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<XBurnMintERC721Governance> {
    return super.deploy(overrides || {}) as Promise<XBurnMintERC721Governance>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): XBurnMintERC721Governance {
    return super.attach(address) as XBurnMintERC721Governance;
  }
  override connect(signer: Signer): XBurnMintERC721Governance__factory {
    return super.connect(signer) as XBurnMintERC721Governance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XBurnMintERC721GovernanceInterface {
    return new utils.Interface(_abi) as XBurnMintERC721GovernanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XBurnMintERC721Governance {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as XBurnMintERC721Governance;
  }
}
